//function maps(e){Sawubona.map=this;var o=this;o.url=void 0!=e&&void 0!=e.url?e.url:window.location.href,o.centerDefault=void 0!=e&&void 0!=e.center?e.center:{lat:-31.4001876,lng:-64.1819856},o.idContainer=void 0!=e&&void 0!=e.idContainer?e.idContainer:"sawubona-map",o.idAutocomplete=void 0!=e&&void 0!=e.idAutocomplete?e.idAutocomplete:"sawubona-map-autocomplete",o.key=void 0!=e&&void 0!=e.key?e.key:"AIzaSyAnKNRFzUipr5i8KY5FvpZfzzASKMHB3mM",o.zoom=void 0!=e&&void 0!=e.zoom?e.zoom:14,o.radio=void 0!=e&&void 0!=e.radio?e.radio:5e3,o.icons=void 0!=e&&void 0!=e.icons?e.icons:{"default":Sawubona.baseUrl+"img/map/marker-default.png",destacado:Sawubona.baseUrl+"img/map/marker-destacado.png",user:Sawubona.baseUrl+"img/map/marker-user.png"},o.centerUser=void 0!=e&&void 0!=e.centerUser?e.centerUser:!0,o.map=null,o.circle=null,o.infowindow=null,o.directionsRenderer=null,o.directionsService=null,o.distance=null,o.autocomplete=null,o.user=null,o.markers=Array(),o.center=function(e){for(var t=0;t<o.markers.length;t++)if(o.markers[t].idMarker==e){o.map.setCenter(o.markers[t].marker.position),o.infowindow.setContent(o.markers[t].description),o.infowindow.open(o.map,o.markers[t].marker),o.map.setZoom(o.zoom),o.getDirections(o.markers[t].marker);break}},o.construct=function(){o.map=new google.maps.Map(document.getElementById(o.idContainer),{center:o.centerDefault,zoom:o.zoom}),o.circle=new google.maps.Circle({strokeColor:"#FF0000",strokeOpacity:.8,strokeWeight:0,fillColor:"#FF0000",fillOpacity:.35,map:o.map,center:null,radius:o.radio/2}),o.infowindow=new google.maps.InfoWindow,null!=document.getElementById(o.idAutocomplete)&&(o.autocomplete=new google.maps.places.Autocomplete(document.getElementById(o.idAutocomplete),{types:["geocode"]})),o.directionsRenderer=new google.maps.DirectionsRenderer({suppressMarkers:!0}),o.directionsService=new google.maps.DirectionsService,o.distance=new google.maps.DistanceMatrixService},o.getAutocomplete=function(){document.getElementById(o.idAutocomplete);null!=autocomplete&&(autocomplete.placeholder="Ingrese su dirección",o.autocomplete.addListener("place_changed",function(){var e=o.autocomplete.getPlace(),t=e.geometry.location.lat(),n=e.geometry.location.lng();0!=t&&0!=n&&(o.directionsRenderer.setMap(),null!=o.user?o.user.marker.setPosition({lat:t,lng:n}):o.user=new o.marker(0,"Usted está aquí",t,n,o.icons.user),o.circle.setCenter(o.user.marker.position),o.circle.setMap(o.map),o.map.setCenter({lat:t,lng:n}),o.infowindow.close(),o.getDistance())}))},o.getDirections=function(e){null!=o.user&&(o.circle.setMap(),o.directionsRenderer.setMap(o.map),o.directionsService.route({origin:o.user.marker.position,destination:{lat:e.position.lat(),lng:e.position.lng()},travelMode:google.maps.TravelMode.DRIVING},function(e,t){t==google.maps.DirectionsStatus.OK&&o.directionsRenderer.setDirections(e)}))},o.getDistance=function(){if(null!=o.user)for(var e=0,t=25,n=0;e<o.markers.length;){for(var i=Array(),r=o.markers.slice(e,e+t),a=0;a<r.length;a++)i.push(new google.maps.LatLng(r[a].marker.position.lat(),r[a].marker.position.lng()));o.distance.getDistanceMatrix({origins:[o.user.marker.position],destinations:i,travelMode:google.maps.TravelMode.DRIVING,unitSystem:google.maps.UnitSystem.METRIC,avoidHighways:!1,avoidTolls:!1},function(e,i){if("OK"==i){for(var r=0;t>r;r++)null!=o.markers[n+r]&&o.markers[n+r].marker.setIcon(e.rows[0].elements[r].distance.value<o.radio/2+250?o.icons.destacado:o.icons["default"]);n+=t,o.map.setZoom(o.zoom),o.circle.setCenter(o.user.marker.position)}}),e+=t}},o.getGoogleApi=function(){var e="https://maps.googleapis.com/maps/api/js?key="+o.key+"&libraries=places&callback=self.init";document.write('<script src="'+e+'"></script>')},o.getMarkers=function(){$.post(o.url,function(e){for(var t=0;t<e.length;t++)o.markers.push(new o.marker(e[t].idMarcador,e[t].descripcion,e[t].latitud,e[t].longitud));o.getUserPosition()},"json")},o.getUserPosition=function(){navigator.geolocation&&navigator.geolocation.getCurrentPosition(function(e){o.user=new o.marker(0,"Usted está aquí.",e.coords.latitude,e.coords.longitude,o.icons.user),o.circle.setCenter({lat:e.coords.latitude,lng:e.coords.longitude}),o.map.setCenter({lat:e.coords.latitude,lng:e.coords.longitude}),o.centerUser===!1&&o.map.setCenter(o.markers[0].marker.position),o.getDistance()},function(e){o.markers.length>0?o.map.setCenter(o.markers[0].marker.position):o.map.setCenter({lat:o.centerDefault.lat,lng:o.centerDefault.lng})})},o.init=function(){o.construct(),o.getMarkers(),o.getAutocomplete()},o.marker=function(e,t,n,i,r){this.idMarker=e||0,this.description=t||null,this.lat=Number(n)||null,this.lng=Number(i)||null,this.marker=null,null!=this.lat&&null!=this.lng&&(this.marker=new google.maps.Marker({animation:0==e?google.maps.Animation.DROP:null,position:{lat:this.lat,lng:this.lng},map:o.map,icon:void 0!=r?r:o.icons["default"]}),this.marker.addListener("click",function(){o.infowindow.setContent(t),o.infowindow.open(o.map,this),0!=e&&o.getDirections(this)}))},o.getGoogleApi()}

function maps(e) {
    Sawubona.map = this;
    var o = this;

    o.url = void 0 != e && void 0 != e.url ? e.url : window.location.href,
    o.centerDefault = void 0 != e && void 0 != e.center ? e.center : {
        lat: -31.4001876,
        lng: -64.1819856
    },
    o.idContainer = void 0 != e && void 0 != e.idContainer ? e.idContainer : "sawubona-map",
    o.idAutocomplete = void 0 != e && void 0 != e.idAutocomplete ? e.idAutocomplete : "sawubona-map-autocomplete",
    o.key = void 0 != e && void 0 != e.key ? e.key : 'AIzaSyClIntHbliCxT8NgHApslvLUm856RNlMJ8',//"AIzaSyAnKNRFzUipr5i8KY5FvpZfzzASKMHB3mM",
    o.zoom = void 0 != e && void 0 != e.zoom ? e.zoom : 14,
    o.radio = void 0 != e && void 0 != e.radio ? e.radio : 5e3,
    o.icons = void 0 != e && void 0 != e.icons ? e.icons : {
        "default": Sawubona.baseUrl + "img/map/marker-default.png",
        destacado: Sawubona.baseUrl + "img/map/marker-destacado.png",
        user: Sawubona.baseUrl + "img/map/marker-user.png"
    },
    o.centerUser = void 0 != e && void 0 != e.centerUser ? e.centerUser : !0,
    o.map = null,
    o.circle = null,
    o.infowindow = null,
    o.directionsRenderer = null,
    o.directionsService = null,
    o.distance = null,
    o.autocomplete = null,
    o.user = null,
    o.markers = Array(),

    o.center = function(e) {
        for (var t = 0; t < o.markers.length; t++){
            if (o.markers[t].idMarker == e) {
                o.map.setCenter(o.markers[t].marker.position),
                o.infowindow.setContent(o.markers[t].description),
                o.infowindow.open(o.map, o.markers[t].marker),
                o.map.setZoom(o.zoom),
                o.getDirections(o.markers[t].marker);
                break;
            }
       	}
    },

    o.construct = function() {
        o.map = new google.maps.Map(document.getElementById(o.idContainer), {
            center: o.centerDefault,
            zoom: o.zoom
        }),

        o.circle = new google.maps.Circle({
            strokeColor: "#FF0000",
            strokeOpacity: .8,
            strokeWeight: 0,
            fillColor: "#FF0000",
            fillOpacity: .0,
            map: o.map,
            center: null,
            radius: o.radio / 2
        }),

        o.infowindow = new google.maps.InfoWindow({
            strokeColor : "FF0000",


        }),

        null != document.getElementById(o.idAutocomplete) && (
        	o.autocomplete = new google.maps.places.Autocomplete(document.getElementById(o.idAutocomplete), {types: ['geocode'], componentRestrictions: {country: 'ar'}} )),

        o.directionsRenderer = new google.maps.DirectionsRenderer({
            suppressMarkers: !0
        }),

        o.directionsService = new google.maps.DirectionsService(),
        o.distance = new google.maps.DistanceMatrixService()
    },

    o.getAutocomplete = function() {
        document.getElementById(o.idAutocomplete);
        null != autocomplete && (autocomplete.placeholder = "Ingrese su dirección",
	        o.autocomplete.addListener("place_changed", function() {
	            var e = o.autocomplete.getPlace();
	            	t = e.geometry.location.lat();
	                n = e.geometry.location.lng();

	            0 != t && 0 != n && (o.directionsRenderer.setMap(), null != o.user ? o.user.marker.setPosition({
	                lat: t,
	                lng: n
	            }) : o.user = new o.marker(0, "Usted está aquí", t, n, o.icons.user),

	            o.circle.setCenter(o.user.marker.position), o.circle.setMap(o.map),

	            o.map.setCenter({
	                lat: t,
	                lng: n
	            }),

	            o.infowindow.close(), o.getDistance())
	        })
	    )
    },

    o.getDirections = function(e) {
        null != o.user && (o.circle.setMap(),
        	o.directionsRenderer.setMap(o.map),
        	o.directionsService.route({
	            origin: o.user.marker.position,
	            destination: {
	                lat: e.position.lat(),
	                lng: e.position.lng()
	            },
	            travelMode: google.maps.TravelMode.DRIVING
	        }, function(e, t) {
	            t == google.maps.DirectionsStatus.OK && o.directionsRenderer.setDirections(e)
	        })
	    )
    },

    o.getDistance = function() {
        if (null != o.user){
            for (var e = 0, t = 25, n = 0; e < o.markers.length;) {
                for (var i = Array(), r = o.markers.slice(e, e + t), a = 0; a < r.length; a++){
                	i.push(new google.maps.LatLng(r[a].marker.position.lat(),r[a].marker.position.lng()));
	                o.distance.getDistanceMatrix({
	                    origins: [o.user.marker.position],
	                    destinations: i,
	                    travelMode: google.maps.TravelMode.DRIVING,
	                    unitSystem: google.maps.UnitSystem.METRIC,
	                    avoidHighways: !1,
	                    avoidTolls: !1
                	}, function(e, i) {
	                    if ("OK" == i) {
	                        for (var r = 0; t > r; r++) null != o.markers[n + r] && o.markers[n + r].marker.setIcon(e.rows[0].elements[r].distance.value < o.radio / 2 + 250 ? o.icons.destacado : o.icons["default"]);
	                        n += t, o.map.setZoom(o.zoom), o.circle.setCenter(o.user.marker.position)
	                    }
	                }), e += t
	            }
	        }
	    }
    },

    o.getGoogleApi = function() {
        var e = "https://maps.googleapis.com/maps/api/js?key=" + o.key + "&libraries=places&callback=self.init";
        document.write('<script src="' + e + '"></script>')
    },

    o.getMarkers = function() {
        $.post(o.url, function(e) {
            for (var t = 0; t < e.length; t++){
            	 o.markers.push(new o.marker(e[t].idMarcador,
	            	 e[t].descripcion,
	            	 e[t].latitud,
	            	 e[t].longitud)
            	);
           	}
            o.getUserPosition()
        }, "json")
    },

    o.getUserPosition = function() {
        navigator.geolocation && navigator.geolocation.getCurrentPosition(function(e) {
            o.user = new o.marker(0, "Usted está aquí.", e.coords.latitude, e.coords.longitude, o.icons.user),

            o.circle.setCenter({
                lat: e.coords.latitude,
                lng: e.coords.longitude
            }),

            o.map.setCenter({
                lat: e.coords.latitude,
                lng: e.coords.longitude
            }),

            o.centerUser === !1 && o.map.setCenter(o.markers[0].marker.position),
            o.getDistance()
        }, function(e) {
            o.markers.length > 0 ? o.map.setCenter(o.markers[0].marker.position) : o.map.setCenter({
                lat: o.centerDefault.lat,
                lng: o.centerDefault.lng
            })
        })
    },

    o.init = function() {
        o.construct(), o.getMarkers(),
        o.getAutocomplete()
    },

    o.marker = function(e, t, n, i, r) {
        this.idMarker = e || 0, this.description = t || null, this.lat = Number(n) || null, this.lng = Number(i) || null, this.marker = null, null != this.lat && null != this.lng && (this.marker = new google.maps.Marker({
            animation: 0 == e ? google.maps.Animation.DROP : null,
            position: {
                lat: this.lat,
                lng: this.lng
            },
            map: o.map,
            icon: void 0 != r ? r : o.icons["default"]
        }),

        this.marker.addListener("click", function() {
            o.infowindow.setContent(t),
            o.infowindow.open(o.map, this),
            0 != e && o.getDirections(this)
        }))

    }, o.getGoogleApi();
}